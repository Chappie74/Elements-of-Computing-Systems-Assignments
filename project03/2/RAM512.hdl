// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/2/RAM512.hdl

/**
 * Memory of 512 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM512[address(t)](t)
 *     Write: If load(t-1) then RAM512[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM512 {

    IN  in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Works.
    DMux8Way(in=load, sel=address[0..2], 
        a=ramALoad,
        b=ramBLoad,
        c=ramCLoad,
        d=ramDLoad,
        e=ramELoad,
        f=ramFLoad,
        g=ramGLoad,
        h=ramHLoad);

    RAM64(in=in, load=ramALoad, address=address[3..8], out=ramA);
    RAM64(in=in, load=ramBLoad, address=address[3..8], out=ramB);
    RAM64(in=in, load=ramCLoad, address=address[3..8], out=ramC);
    RAM64(in=in, load=ramDLoad, address=address[3..8], out=ramD);
    RAM64(in=in, load=ramELoad, address=address[3..8], out=ramE);
    RAM64(in=in, load=ramFLoad, address=address[3..8], out=ramF);
    RAM64(in=in, load=ramGLoad, address=address[3..8], out=ramG);
    RAM64(in=in, load=ramHLoad, address=address[3..8], out=ramH);

    Mux8Way16(sel=address[0..2], a=ramA, b=ramB, c=ramC, d=ramD, e=ramE, f=ramF, g=ramG, h=ramH, 
            out=out);
}
