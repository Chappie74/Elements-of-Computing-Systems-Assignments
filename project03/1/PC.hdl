// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/1/PC.hdl

/**
 * 16-bit counter with load and reset controls.
 *
 * If reset(t-1) then out(t) = 0
 *    else if load(t-1) then out(t) = in(t-1)
 *         else if inc(t-1) then out(t) = out(t-1) + 1 (integer addition)
 *              else out(t) = out(t-1)
 */

CHIP PC {

    IN  in[16], load, inc, reset;
    OUT out[16];

    PARTS:
    // Works
    Not(in=load, out=notLoad);
    Not(in=inc, out=notInc);
    Not(in=reset, out=notReset);

    Or(a=reset, b=load, out=zeroX);

    And(a=inc, b=notLoad, out=tempZeroY);
    Or(a=tempZeroY, b=reset, out=zeroY);
    
    And(a=notReset, b=notLoad, out=tempNegX);
    And(a=tempNegX, b=inc, out=negX);

    And(a=notLoad, b=notReset, out=tempNegY);
    And(a=tempNegY, b=inc, out=negY);
    
    Or(a=inc, b=load, out=fVal);

    ALU(x=prev, y=in, zx=zeroX, nx=negX, 
                      zy=zeroY, ny=negY, 
                     f=fVal, no=negY, out=tempOut);

    Or(a=load, b=inc, out=tempNewValue);
    Or(a=tempNewValue, b=reset, out=newValue);
    
    Register(in=tempOut, load=newValue, out=out, out=prev);

}
